.container
    h1#usage.page-header
        a.anchorjs-link(href='#usage', aria-label='Anchor link for: usage', data-anchorjs-icon='', style='font-family: anchorjs-icons; font-style: normal; font-variant-ligatures: normal; font-variant-position: normal; font-variant-caps: normal; font-variant-numeric: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-weight: normal; position: absolute; margin-left: -1em; padding-right: 0.5em;')
        | Usage: Client-side Javascript Library (ratings only, soon reviews)
    ul
        li
            h4 Store user-ratings
            p
                | High-level Javascript wrapper to call low-level POST requests.
            ul
                li
                    | Calling 
                    code raasta.rate(...)
                li
                    | will submit a new user-rating for item [ITEM_ID], and
                li
                    | call the success 
                    u [SUCCESS]
                    |  callback.
            script.
                var demoToken = "df3a9d58-8c13-4d9c-9b13-46f032704ef0";
                var demoUser = "demo-user";
                var demoItem = "demo-item-id-123";
                raasta.init(demoToken, demoUser);
                var demoRate = function (rating) {
                    var className = raasta.rate({key1: demoItem, rating: rating, success: demoRateSuccess});
                    document.getElementById("demo_get_result_style").className = "raasta_stars " + className;
                };
                var demoRateSuccess = function (result) {
                    document.getElementById("demo_get_result").textContent = JSON.stringify(result);
                };
            p
                strong Try it:
                |  Submit a new rating for item "demo-item-id-123"
                table
                    tr
                        td
                            button(onclick='demoRate(1)') 1 Star
                            button(onclick='demoRate(2)') 2 Star
                            button(onclick='demoRate(3)') 3 Star
                            button(onclick='demoRate(4)') 4 Star
                            button(onclick='demoRate(5)') 5 Star
                    tr
                        td#demo_get_result ...
                    tr
                        td
                            span#demo_get_result_style.raasta_stars
            p
                | Source:
                br
                code
                    | &lt;script src=&quot;https://raasta.herokuapp.com/javascript/raasta.js&quot;&gt;&lt;/script&gt;
                    br
                    | &lt;script&gt;
                    br
                    | &nbsp;&nbsp;/* Init must be called before any other RAASTA method. You only need it ONCE per
                    | page-load.
                    | */
                    br
                    | &nbsp;&nbsp;raasta.init(
                    token [ACCESS_TOKEN]
                    | ,
                    user [USER_ID]
                    | );
                    br
                    | &lt;/script&gt;
                    br
                    br
                    | &lt;script&gt;
                    br
                    | &nbsp;&nbsp;/* Store user-rating for user
                    user [USER_ID]
                    | about item
                    key1 [ITEM_ID]
                    | : */
                    br
                    | &nbsp;&nbsp;raasta.rate(
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;
                    rating rating: [NUMERIC_RATING]
                    | , 
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;
                    key1 key1:[ITEM_ID]
                    | , // optional 
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;success:[SUCCESS_CALLBACK] // optional 
                    br
                    | &nbsp;&nbsp;});
                    br
                    | &lt;/script&gt;
            p
                | A User-Rating for
                key1 item or service [ITEM_ID]
                | will be stored.
        li
            h4 Retrieve and display user-ratings' average
            p
                | High-level Javascript wrapper to call low-level GET requests.
            ul
                li
                    | Calling 
                    code raasta.get(...)
                li
                    | will load the user-rating average of item [ITEM_ID],
                li
                    | set the 
                    u content
                    |  of DOM element [DISPLAY_ELEMENT_ID], and
                li
                    | set the 
                    u style
                    |  of DOM element [raasta_stars_ID].
            script.
                var demoGet = function () {
                    raasta.get({key1: demoItem, display: "display_element_id", style: "raasta_stars_id"})
                };
            p
                strong Try it:
                button(onclick='demoGet()') Load Ratings for item "demo-item-id-123"
            table
                tr
                    td(colspan='2')
                tr
                    td Display element:
                    td
                        span#display_element_id [...]
                tr
                    td Style element:
                    td
                        span#raasta_stars_id.raasta_stars
            p
                | Source:
                br
                code
                    | &lt;script src=&quot;https://raasta.herokuapp.com/javascript/raasta.js&quot;&gt;&lt;/script&gt;
                    br
                    | &lt;script&gt;
                    br
                    | &nbsp;&nbsp;/* Init must be called before any other RAASTA method. You only need it ONCE per
                    | page-load.
                    | */
                    br
                    | &nbsp;&nbsp;raasta.init(
                    token [ACCESS_TOKEN]
                    | ,
                    user [USER_ID]
                    | );
                    br
                    | &lt;/script&gt;
                    br
                    br
                    | &lt;script&gt;
                    br
                    | &nbsp;&nbsp;raasta.get({
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;
                    key1 key1:[ITEM_ID]
                    | , // optional 
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;display:[DISPLAY_ELEMENT_ID], // optional 
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;style:[raasta_stars_ID] // optional 
                    br
                    | &nbsp;&nbsp;});
                    br
                    | &lt;/script&gt;
    h1#api_usage.page-header
        a.anchorjs-link(href='#usage', aria-label='Anchor link for: api_usage', data-anchorjs-icon='', style='font-family: anchorjs-icons; font-style: normal; font-variant-ligatures: normal; font-variant-position: normal; font-variant-caps: normal; font-variant-numeric: normal; font-variant-alternates: normal; font-variant-east-asian: normal; font-weight: normal; position: absolute; margin-left: -1em; padding-right: 0.5em;')
        | Usage: Low-level REST API requests (ratings & reviews)
    ul
        li
            h4 Ratings: Store
            p
                | Call this low-level end-point from website or backend.
            code
                b  curl -X PUT 
                |  &quot;https://raasta.heroku.com/api/v1/ratings?
                token token=[ACCESS_TOKEN]
                | &amp;
                user user=[USER_ID]
                | &amp;
                rating rating=[NUMERIC_RATING]
                | &amp;
                key1 key1=[ITEM_ID]
                | &quot;
            p
                | A User-Rating for
                key1 item or service [ITEM_ID]
                | will be stored.
        li
            h4
                | Ratings: Retrieve average and other stats for an 
                key1 item or service
            p
                | Retrieve the average user-rating for a specific item, so you can pass the value to your frontend/UI.
            code
                b curl -X GET
                |  &quot;https://raasta.heroku.com/api/v1/ratings?
                token token=[ACCESS_TOKEN]
                | &amp;
                key1 key1=[ITEM_ID]
                | &quot;
            p
                | Retrieved statistics of User-Ratings for
                key1 item or service [ITEM_ID]
                | will be returned.
                br
                samp
                    | {
                    br
                    | &nbsp;&nbsp;"message": "stats",
                    br
                    | &nbsp;&nbsp;"params": {
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;
                    key1 "key1": [ITEM_ID]
                    br
                    | &nbsp;&nbsp;}
                    br
                    | &nbsp;&nbsp;"stats": {
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"average": [AVERAGE],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count": [TOTAL RATINGS],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count1": [RATINGS WITH 1-STAR],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count2": [RATINGS WITH 2-STAR],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count3": [RATINGS WITH 3-STAR],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count4": [RATINGS WITH 4-STAR],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"count5": [RATINGS WITH 5-STAR],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"stddev": [STANDARD DEVIATION],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;"variance": [VARIANCE]
                    br
                    | &nbsp;&nbsp;}
                    br
                    | }
        li
            h4 Reviews: Store
            p
                | Call this low-level end-point from website or backend.
                br
                code
                    b  curl -X PUT 
                    |  &quot;https://raasta.heroku.com/api/v1/reviews?
                    token token=[ACCESS_TOKEN]
                    | &amp;
                    user user=[USER_ID]
                    | &amp;
                    key1 key1=[ITEM_ID]
                    | &quot;
            p
                | Body:
                br
                code
                    | { 
                    b title
                    | : &quot;The title of the review&quot;, 
                    b body
                    | : &quot;Long text to completely describe the user&apos;s opinion for this item&quot; }
            p
                | A User-Review for
                key1 item or service [ITEM_ID]
                | will be stored.
        li
            h4
                | Reviews: Retrieve latest reviews for an 
                key1 item or service
            p
                | Retrieve the latest reviews (up to 30) for a specific item, so you can pass the value to your frontend/UI.
            code
                b curl -X GET
                |  &quot;https://raasta.heroku.com/api/v1/reviews?
                token token=[ACCESS_TOKEN]
                | &amp;
                key1 key1=[ITEM_ID]
                | &quot;
            p
                | A list of most recent reviews (descending) for the
                key1 item or service [ITEM_ID]
                | will be returned.
                br
                samp
                    | {
                    br
                    | &nbsp;&nbsp;"message": "reviews",
                    br
                    | &nbsp;&nbsp;"params": {
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;
                    key1 "key1": [ITEM_ID]
                    br
                    | &nbsp;&nbsp;}
                    br
                    | &nbsp;&nbsp;"reviews": [
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;{
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title": [REVIEW_1 TITLE],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"body": [REVIEW_1 BODY],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"user": [REVIEW_1 USER],
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"timestamp": [REVIEW_1 TIMESTAMP]
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;}, {
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...
                    br
                    | &nbsp;&nbsp;&nbsp;&nbsp;}
                    br
                    | &nbsp;&nbsp;]
                    br
                    | }
    
